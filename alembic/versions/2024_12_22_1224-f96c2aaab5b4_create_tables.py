"""create tables

Revision ID: f96c2aaab5b4
Revises: 
Create Date: 2024-12-22 12:24:25.348987

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = "f96c2aaab5b4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("name", sa.VARCHAR(length=30), nullable=False),
        sa.Column(
            "api_key",
            sqlalchemy_utils.EncryptedType(),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_api_key"), "users", ["api_key"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "followers",
        sa.Column("follower_id", sa.INTEGER(), nullable=True),
        sa.Column("followed_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["followed_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["follower_id"],
            ["users.id"],
        ),
    )
    op.create_table(
        "tweets",
        sa.Column("content", sa.VARCHAR(length=300), nullable=False),
        sa.Column("attachments", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["author_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tweets_id"), "tweets", ["id"], unique=False)
    op.create_table(
        "likes",
        sa.Column("name", sa.VARCHAR(length=30), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("tweet_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["tweet_id"], ["tweets.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_likes_id"), "likes", ["id"], unique=False)
    op.create_table(
        "medias",
        sa.Column("tweet_id", sa.Integer(), nullable=True),
        sa.Column("file_link", sa.VARCHAR(length=300), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["tweet_id"], ["tweets.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_medias_id"), "medias", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_medias_id"), table_name="medias")
    op.drop_table("medias")
    op.drop_index(op.f("ix_likes_id"), table_name="likes")
    op.drop_table("likes")
    op.drop_index(op.f("ix_tweets_id"), table_name="tweets")
    op.drop_table("tweets")
    op.drop_table("followers")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_api_key"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
