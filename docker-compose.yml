services:
  db:
    container_name: "postgres_db"
    image: postgres
    restart: always
    environment:
      - POSTGRES_NAME=${USER_NAME_DB}
      - POSTGRES_PASSWORD=${USER_PASS_DB}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=./data/db
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - backend

  db_test:
    container_name: "test_db"
    image: postgres
    restart: always
    environment:
      - POSTGRES_NAME=${TEST_USER_NAME_DB}
      - POSTGRES_PASSWORD=${TEST_USER_PASS_DB}
      - POSTGRES_DB=${TEST_DB_NAME}
      - PGDATA=./data/test_db
    ports:
      - "5433:5432"
    volumes:
      - ./data/test_db:/var/lib/postgresql/data
    networks:
      - backend

  fastapi:
    container_name: "fastapi_tweeter_clone"
    build:
      dockerfile: src/Dockerfile
    command: uvicorn src.loader:app --reload --host 0.0.0.0
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - db_test
    volumes:
      - .:/code
      - ./web/static/images:/usr/share/nginx/html/static/images
    networks:
      - backend

  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - fastapi
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf
      - ./web/static:/code/web/static
    networks:
      - backend
    ports:
      - "8080:80"
    links:
      - fastapi


networks:
  backend:
    driver: bridge

volumes:
  db:
    driver: local
  db_test:
    driver: local